// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using EODHistoricalData.NET;
//
//    var fundamentalStock = FundamentalStock.FromJson(jsonString);

namespace EODHistoricalData.NET
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using EODHistoricalData.NET.BusinessObjects;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class FundamentalStock
    {
        [JsonProperty("General")]
        public FundamentalGeneral General { get; set; }

        [JsonProperty("Highlights")]
        public Highlights Highlights { get; set; }

        [JsonProperty("Valuation")]
        public Valuation Valuation { get; set; }

        [JsonProperty("SharesStats")]
        public SharesStats SharesStats { get; set; }

        [JsonProperty("Technicals")]
        public FundamentalTechnicals Technicals { get; set; }

        [JsonProperty("SplitsDividends")]
        public SplitsDividends SplitsDividends { get; set; }

        [JsonProperty("outstandingShares")]
        public OutstandingShares OutstandingShares { get; set; }

        [JsonProperty("Earnings")]
        public Earnings Earnings { get; set; }

        [JsonProperty("Financials")]
        public Financials Financials { get; set; }
    }

    public partial class Earnings
    {
        [JsonProperty("History")]
        public Dictionary<string, History> History { get; set; }

        [JsonProperty("Trend")]
        public Dictionary<string, Dictionary<string, string>> Trend { get; set; }
    }

    public partial class History
    {
        [JsonProperty("date")]
        public DateTimeOffset Date { get; set; }

        [JsonProperty("reportDate")]
        public DateTimeOffset? ReportDate { get; set; }

        [JsonProperty("epsActual")]
        public string EpsActual { get; set; }

        [JsonProperty("epsEstimate")]
        public string EpsEstimate { get; set; }

        [JsonProperty("epsDifference")]
        public string EpsDifference { get; set; }

        [JsonProperty("surprisePercent")]
        public string SurprisePercent { get; set; }
    }

    public partial class Financials
    {
        [JsonProperty("Balance_Sheet")]
        public BalanceSheet BalanceSheet { get; set; }

        [JsonProperty("Cash_Flow")]
        public CashFlow CashFlow { get; set; }

        [JsonProperty("Income_Statement")]
        public IncomeStatement IncomeStatement { get; set; }
    }

    public partial class BalanceSheet
    {
        [JsonProperty("currency_symbol")]
        public string CurrencySymbol { get; set; }

        [JsonProperty("quarterly")]
        public Dictionary<string, Dictionary<string, string>> Quarterly { get; set; }

        [JsonProperty("yearly")]
        public Dictionary<string, Dictionary<string, string>> Yearly { get; set; }
    }

    public partial class CashFlow
    {
        [JsonProperty("currency_symbol")]
        public string CurrencySymbol { get; set; }

        [JsonProperty("quarterly")]
        public Dictionary<string, Dictionary<string, string>> Quarterly { get; set; }

        [JsonProperty("yearly")]
        public Dictionary<string, Dictionary<string, string>> Yearly { get; set; }
    }

    public partial class IncomeStatement
    {
        [JsonProperty("currency_symbol")]
        public string CurrencySymbol { get; set; }

        [JsonProperty("quarterly")]
        public Dictionary<string, Dictionary<string, string>> Quarterly { get; set; }

        [JsonProperty("yearly")]
        public Dictionary<string, Dictionary<string, string>> Yearly { get; set; }
    }

    public partial class Highlights
    {
        [JsonProperty("MarketCapitalization")]
        public long MarketCapitalization { get; set; }

        [JsonProperty("MarketCapitalizationMln")]
        public string MarketCapitalizationMln { get; set; }

        [JsonProperty("EBITDA")]
        public long Ebitda { get; set; }

        [JsonProperty("PERatio")]
        public string PeRatio { get; set; }

        [JsonProperty("PEGRatio")]
        public decimal? PegRatio { get; set; }

        [JsonProperty("WallStreetTargetPrice")]
        public decimal? WallStreetTargetPrice { get; set; }

        [JsonProperty("BookValue")]
        public decimal? BookValue { get; set; }

        [JsonProperty("DividendShare")]
        public decimal? DividendShare { get; set; }

        [JsonProperty("DividendYield")]
        public decimal? DividendYield { get; set; }

        [JsonProperty("EarningsShare")]
        public decimal? EarningsShare { get; set; }

        [JsonProperty("EPSEstimateCurrentYear")]
        public decimal? EpsEstimateCurrentYear { get; set; }

        [JsonProperty("EPSEstimateNextYear")]
        public decimal? EpsEstimateNextYear { get; set; }

        [JsonProperty("EPSEstimateNextQuarter")]
        public string EpsEstimateNextQuarter { get; set; }

        [JsonProperty("EPSEstimateCurrentQuarter")]
        public decimal? EpsEstimateCurrentQuarter { get; set; }

        [JsonProperty("MostRecentQuarter")]
        public DateTimeOffset MostRecentQuarter { get; set; }

        [JsonProperty("ProfitMargin")]
        public decimal? ProfitMargin { get; set; }

        [JsonProperty("OperatingMarginTTM")]
        public decimal? OperatingMarginTtm { get; set; }

        [JsonProperty("ReturnOnAssetsTTM")]
        public decimal? ReturnOnAssetsTtm { get; set; }

        [JsonProperty("ReturnOnEquityTTM")]
        public decimal? ReturnOnEquityTtm { get; set; }

        [JsonProperty("RevenueTTM")]
        public decimal? RevenueTtm { get; set; }

        [JsonProperty("RevenuePerShareTTM")]
        public decimal? RevenuePerShareTtm { get; set; }

        [JsonProperty("QuarterlyRevenueGrowthYOY")]
        public decimal? QuarterlyRevenueGrowthYoy { get; set; }

        [JsonProperty("GrossProfitTTM")]
        public decimal? GrossProfitTtm { get; set; }

        [JsonProperty("DilutedEpsTTM")]
        public decimal? DilutedEpsTtm { get; set; }

        [JsonProperty("QuarterlyEarningsGrowthYOY")]
        public decimal? QuarterlyEarningsGrowthYoy { get; set; }
    }

    public partial class OutstandingShares
    {
        [JsonProperty("annual")]
        public Dictionary<string, Annual> Annual { get; set; }

        [JsonProperty("quarterly")]
        public Dictionary<string, Annual> Quarterly { get; set; }
    }

    public partial class Annual
    {
        [JsonProperty("date")]
        public string Date { get; set; }

        [JsonProperty("sharesMln")]
        public string SharesMln { get; set; }
    }

    public partial class SharesStats
    {
        [JsonProperty("SharesOutstanding")]
        public decimal? SharesOutstanding { get; set; }

        [JsonProperty("SharesFloat")]
        public decimal? SharesFloat { get; set; }

        [JsonProperty("PercentInsiders")]
        public decimal? PercentInsiders { get; set; }

        [JsonProperty("PercentInstitutions")]
        public decimal? PercentInstitutions { get; set; }

        [JsonProperty("SharesShort")]
        public decimal? SharesShort { get; set; }

        [JsonProperty("SharesShortPriorMonth")]
        public decimal? SharesShortPriorMonth { get; set; }

        [JsonProperty("ShortRatio")]
        public decimal? ShortRatio { get; set; }

        [JsonProperty("ShortPercentOutstanding")]
        public decimal? ShortPercentOutstanding { get; set; }

        [JsonProperty("ShortPercentFloat")]
        public decimal? ShortPercentFloat { get; set; }
    }

    public partial class SplitsDividends
    {
        [JsonProperty("ForwardAnnualDividendRate")]
        public decimal? ForwardAnnualDividendRate { get; set; }

        [JsonProperty("ForwardAnnualDividendYield")]
        public decimal? ForwardAnnualDividendYield { get; set; }

        [JsonProperty("PayoutRatio")]
        public decimal? PayoutRatio { get; set; }

        [JsonProperty("DividendDate")]
        public DateTimeOffset DividendDate { get; set; }

        [JsonProperty("ExDividendDate")]
        public DateTimeOffset ExDividendDate { get; set; }

        [JsonProperty("LastSplitFactor")]
        public string LastSplitFactor { get; set; }

        [JsonProperty("LastSplitDate")]
        public DateTimeOffset LastSplitDate { get; set; }

        [JsonProperty("NumberDividendsByYear")]
        public Dictionary<string, NumberDividendsByYear> NumberDividendsByYear { get; set; }
    }

    public partial class NumberDividendsByYear
    {
        [JsonProperty("Year")]
        public long Year { get; set; }

        [JsonProperty("Count")]
        public long Count { get; set; }
    }

    public partial class Valuation
    {
        [JsonProperty("TrailingPE")]
        public decimal? TrailingPe { get; set; }

        [JsonProperty("ForwardPE")]
        public decimal? ForwardPe { get; set; }

        [JsonProperty("PriceSalesTTM")]
        public decimal? PriceSalesTtm { get; set; }

        [JsonProperty("PriceBookMRQ")]
        public decimal? PriceBookMrq { get; set; }

        [JsonProperty("EnterpriseValueRevenue")]
        public decimal? EnterpriseValueRevenue { get; set; }

        [JsonProperty("EnterpriseValueEbitda")]
        public decimal? EnterpriseValueEbitda { get; set; }
    }

    public partial class FundamentalStock
    {
        public static FundamentalStock FromJson(string json) => JsonConvert.DeserializeObject<FundamentalStock>(json, EODHistoricalData.NET.ConverterFundamentalStock.Settings);
    }

    public static class SerializeFundamentalStock
    {
        public static string ToJson(this FundamentalStock self) => JsonConvert.SerializeObject(self, EODHistoricalData.NET.ConverterFundamentalStock.Settings);
    }

    internal static class ConverterFundamentalStock
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
